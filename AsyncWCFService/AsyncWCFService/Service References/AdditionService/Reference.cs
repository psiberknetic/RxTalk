//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.32559
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AsyncWCFService.AdditionService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AdditionService.IAdditionService")]
    public interface IAdditionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdditionService/AddNumbers", ReplyAction="http://tempuri.org/IAdditionService/AddNumbersResponse")]
        decimal AddNumbers(System.Collections.Generic.List<decimal> numbers);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAdditionService/AddNumbers", ReplyAction="http://tempuri.org/IAdditionService/AddNumbersResponse")]
        System.IAsyncResult BeginAddNumbers(System.Collections.Generic.List<decimal> numbers, System.AsyncCallback callback, object asyncState);
        
        decimal EndAddNumbers(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdditionServiceChannel : AsyncWCFService.AdditionService.IAdditionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNumbersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNumbersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public decimal Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdditionServiceClient : System.ServiceModel.ClientBase<AsyncWCFService.AdditionService.IAdditionService>, AsyncWCFService.AdditionService.IAdditionService {
        
        private BeginOperationDelegate onBeginAddNumbersDelegate;
        
        private EndOperationDelegate onEndAddNumbersDelegate;
        
        private System.Threading.SendOrPostCallback onAddNumbersCompletedDelegate;
        
        public AdditionServiceClient() {
        }
        
        public AdditionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdditionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdditionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdditionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<AddNumbersCompletedEventArgs> AddNumbersCompleted;
        
        public decimal AddNumbers(System.Collections.Generic.List<decimal> numbers) {
            return base.Channel.AddNumbers(numbers);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddNumbers(System.Collections.Generic.List<decimal> numbers, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNumbers(numbers, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public decimal EndAddNumbers(System.IAsyncResult result) {
            return base.Channel.EndAddNumbers(result);
        }
        
        private System.IAsyncResult OnBeginAddNumbers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<decimal> numbers = ((System.Collections.Generic.List<decimal>)(inValues[0]));
            return this.BeginAddNumbers(numbers, callback, asyncState);
        }
        
        private object[] OnEndAddNumbers(System.IAsyncResult result) {
            decimal retVal = this.EndAddNumbers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNumbersCompleted(object state) {
            if ((this.AddNumbersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNumbersCompleted(this, new AddNumbersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNumbersAsync(System.Collections.Generic.List<decimal> numbers) {
            this.AddNumbersAsync(numbers, null);
        }
        
        public void AddNumbersAsync(System.Collections.Generic.List<decimal> numbers, object userState) {
            if ((this.onBeginAddNumbersDelegate == null)) {
                this.onBeginAddNumbersDelegate = new BeginOperationDelegate(this.OnBeginAddNumbers);
            }
            if ((this.onEndAddNumbersDelegate == null)) {
                this.onEndAddNumbersDelegate = new EndOperationDelegate(this.OnEndAddNumbers);
            }
            if ((this.onAddNumbersCompletedDelegate == null)) {
                this.onAddNumbersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNumbersCompleted);
            }
            base.InvokeAsync(this.onBeginAddNumbersDelegate, new object[] {
                        numbers}, this.onEndAddNumbersDelegate, this.onAddNumbersCompletedDelegate, userState);
        }
    }
}
